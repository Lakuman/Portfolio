@import url("https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@300;400;500;600;700&display=swap");
$sides: ("top", "right", "bottom", "left");
html,
body {
  font-family: "Plus Jakarta Sans", sans-serif;
}
.flex {
  display: flex !important;
  flex-wrap: wrap;
  flex-direction: row !important;
}

.flex-col {
  display: flex !important;
  flex-wrap: wrap;
  flex-direction: column !important;
  width: 100%; /* ou toute autre largeur souhaitée */
  max-width: 100%; /* Limite la largeur pour éviter de déborder */
}

.align {
  @extend .flex;
  align-items: center !important;
}

.no-overflow {
  max-width: 100%;
  overflow-wrap: break-word; // Forcer les mots longs à se couper
  word-wrap: break-word; // Compatibilité supplémentaire
}

@for $var from 1 through 200 {
  .pad-#{$var} {
    padding: #{$var}px;
  }
  .pad-x-#{$var} {
    padding-right: #{$var}px;
    padding-left: #{$var}px;
  }
  .pad-y-#{$var} {
    padding-top: #{$var}px;
    padding-bottom: #{$var}px;
  }
  @each $side in $sides {
    .pad-#{$side}-#{$var} {
      padding-#{$side}: #{$var}px;
    }
  }
}

@mixin border() {
  @each $color-name, $color-value in $colors {
    .border-#{$color-name} {
      border: 1px solid $color-value;
    }
    .border-#{$color-name}-rd-full {
      border: 1px solid $color-value;
      border-radius: 100%;
    }
    @each $side in $sides {
      .border-#{$side}-#{$color-name} {
        border-#{$side}: 1px solid $color-value !important;
      }
      @for $var from 0 through 5 {
        .border-#{$side}-#{$color-name}-#{$var} {
          border-#{$side}: #{$var}px solid $color-value !important;
        }
      }
    }
    @for $var from 0 through 50 {
      .border-#{$color-name}-rd-#{$var} {
        border: 1px solid $color-value;
        border-radius: #{$var}px;
      }
    }
    @for $var from 0 through 5 {
      .border-#{$color-name}-#{$var} {
        border: #{$var}px solid $color-value;
      }
    }
  }
}

@for $var from 1 through 100 {
  .gap-#{$var} {
    @extend .flex;
    gap: $var + px;
  }
}

.button-logo {
  height: 32px;
}
.all-parent {
  @extend .flex, .align, .gap-32;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  overflow: hidden;
}
.parent {
  @extend .flex, .align, .gap-32;
  justify-content: center;
}

.intro {
  @extend .flex, .align, .gap-32;
  z-index: 2;
  width: 60%;
  justify-content: left !important;
  align-items: left !important;
  min-width: 300px;
}

.project {
  @extend .flex, .align, .gap-32, .pad-32;
  z-index: 2;
  width: 60%;
  height: auto;
  min-width: 300px;
  background-image: url("/videos/noise.svg");
  background-size: cover; /* ou "contain" selon vos besoins */
  background-repeat: no-repeat;
  background-position: center;
  border: 2px solid #0c3d3a;
  border-radius: 20px;
  background-color: #051d1f; 
}

.skills {
  @extend .flex, .align, .gap-16;
  z-index: 2;
  width: 60%;
  min-width: 300px;
  background-image: url("/videos/noise.svg");
  background-size: cover; /* ou "contain" selon vos besoins */
  background-repeat: no-repeat;
  background-position: center;
}

.hobbies {
  @extend .flex, .align;
  z-index: 2;
  justify-content: center;
}

.coworkers {
  @extend .flex, .align;
  justify-content: center;
  width: 400%;
  z-index: 2;
  justify-content: center !important;
  align-items: center !important;
}

.title {
  word-wrap: break-word; /* Permet de couper les mots longs */
  word-break: break-word; /* Force la coupure si nécessaire */
  overflow-wrap: break-word; /* Recommandé pour la compatibilité */
  white-space: normal; /* Permet le retour à la ligne naturel */
  font-size: 24px;
  box-sizing: border-box;
  font-weight: bold;
  max-width: 50vw;
  text-align: left;
  justify-content: left !important;
  align-items: left !important;
}
